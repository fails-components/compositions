apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fails-components.fullname" . }}-ltihandler
  labels:
    {{- include "fails-components.labels" . | nindent 4 }}-ltihandler
spec:
  {{- if not .Values.ltihandler.autoscaling.enabled }}
  replicas: {{ .Values.ltihandler.replicaCount }}
  {{- end }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "fails-components.selectorLabels" . | nindent 6 }}-ltihandler
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fails-components.selectorLabels" . | nindent 8 }}-ltihandler
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
 #     serviceAccountName: {{ include "fails-components.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-ltihandler
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repositoryprefix }}ltihandler:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: FAILS_KEYS_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keys.secretName }}
                  key: {{ .Values.keys.secretKey }}
                  optional: false
            - name: FAILS_STATIC_SECRET
              value: '"dummy"'
            - name:  REDIS_HOST
              value: "{{ .Values.redis.host }}"
            - name:  REDIS_PORT
              value: "{{ .Values.redis.port }}"
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: {{ .Values.redis.secretKey }}
                  optional: false
            - name: FAILS_LMS_LIST
              value: "{{ .Values.lmsconfig.list }}"
            {{- if .Values.lmsconfig.course_whitelist }}
            - name: FAILS_LMS_COURSE_WHITELIST
              value: "{{ .Values.lmsconfig.course_whitelist }}"
            {{- end }}
            {{- if .Values.lmsconfig.addl_admins }}
            - name: FAILS_ADDL_ADMINS
              value: "{{ .Values.lmsconfig.addl_admins }}"
            {{- end }}
            - name: FAILS_MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.secretName }}
                  key: {{ .Values.mongo.secretKeyPassword }}
                  optional: false               
            - name: FAILS_MONGO_URL
              value: "mongodb://{{ .Values.mongo.user }}:$(FAILS_MONGO_PASSWORD)@{{ .Values.mongo.mongoConnection }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.ltihandler.resources | nindent 12 }}
      {{- with .Values.ltihandler.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ltihandler.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ltihandler.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
